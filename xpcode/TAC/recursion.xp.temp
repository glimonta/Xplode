string_7_1 : "Permutaciones totales: "
string_7_2 : "No intentes explotar aunque programes en Xplode!"

##############################################################
#B1
##############################################################


read t1 2
n := t1
#Este es el código generado por la linea 24 de la instrucción res := factorial(n)
#Este es el código generado por la linea 24 de la llamada a la función: factorial
param n
t2 call factorial 1
res := t2
write string_7_1
write res
exit
##############################################################
#B2
##############################################################


#Definición de Función factorial: linea 3
factorial:
#Este es el código generado por la linea 5 de la instrucción if que termina en next_if_5_1
t3 == n 1
ifnot t3 goto next_if_5_1
##############################################################
#B3
##############################################################


#Este es el código generado por la linea 5 de la instrucción return
return 1
##############################################################
#B4
##############################################################


next_if_5_1:
#Este es el código generado por la linea 6 de la instrucción if que termina en next_if_6_1
t4 < n 1
ifnot t4 goto next_if_6_1
##############################################################
#B5
##############################################################


write string_7_2
#Este es el código generado por la linea 8 de la instrucción return
t5 neg 1
return t5
##############################################################
#B6
##############################################################


next_if_6_1:
#Este es el código generado por la linea 11 de la instrucción return
#Este es el código generado por la linea 11 de la llamada a la función: factorial
t6 - n 1
param t6
t7 call factorial 1
t8 * t7 n
return t8
