string_7_1 : "Person Data is : "
string_7_2 : " "
string_7_3 : " "
string_7_4 : " "

#############################################################
#B1
#############################################################


allocate 244
#Este es el código generado por la linea 26 de la instrucción for que inicia en begin_for_26_1 y termina en end_for_26_1
#Este es el código generado por la linea 26 de la instrucción i := 0
i := 0
goto first_for_26_1
#############################################################
#B2
#############################################################


begin_for_26_1:
#Este es el código generado por la linea 26 de la instrucción i := 1 + 1
t1 + 1 1
i := t1
#############################################################
#B3
#############################################################


first_for_26_1:
t2 < i 10
if t2 goto mid1
#############################################################
#B4
#############################################################


goto end_for_26_1
#############################################################
#B5
#############################################################


mid1:
#Este es el código generado por la linea 27 de la llamada a la función: readPerson
begin_function
t3 * i 24
param_ref p t3 
t5 call readPerson 1
epilogue t5 4
goto begin_for_26_1
#############################################################
#B6
#############################################################


end_for_26_1:
#Este es el código generado por la linea 29 de la instrucción for que inicia en begin_for_29_1 y termina en end_for_29_1
#Este es el código generado por la linea 29 de la instrucción i := 0
i := 0
goto first_for_29_1
#############################################################
#B7
#############################################################


begin_for_29_1:
#Este es el código generado por la linea 29 de la instrucción i := 1 + 1
t6 + 1 1
i := t6
#############################################################
#B8
#############################################################


first_for_29_1:
t7 < i 10
if t7 goto mid2
#############################################################
#B9
#############################################################


goto end_for_29_1
#############################################################
#B10
#############################################################


mid2:
#Este es el código generado por la linea 30 de la llamada a la función: printPerson
begin_function
t8 * i 24
param_ref p t8 
t10 call printPerson 1
epilogue t10 4
goto begin_for_29_1
#############################################################
#B11
#############################################################


end_for_29_1:
#Este es el código generado por la linea 33 de la instrucción i := p[7].id
t11 * 7 24
t12 + t11 12
t13 :=[] p t12
i := t13
exit
#############################################################
#B12
#############################################################


#Definición de Función printPerson: linea 10
printPerson:
prologue 0
#Este es el código generado por la linea 11 de la instrucción write
write string_7_1 9
#Este es el código generado por la linea 12 de la instrucción write
t14 :=[] p 12
write t14 2
write string_7_2 9
t15 :=[] p 0
write t15 6
write string_7_3 9
t16 :=[] p 16
write t16 5
write string_7_4 9
t17 :=[] p 20
write t17 5
return
#############################################################
#B13
#############################################################


#Definición de Función readPerson: linea 15
readPerson:
prologue 0
read t18 2
p 12 []:= t18
read t20 5
p 16 []:= t20
read t22 5
p 20 []:= t22
read t24 6
p 0 []:= t24
return
